<Application x:Class="Presentation.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:Presentation.WPF.Implementations"
             xmlns:v="clr-namespace:Presentation.WPF.Views"
             xmlns:e="clr-namespace:Engine.Implementations;assembly=Engine"
             xmlns:c="clr-namespace:Presentation.WPF.Converters"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    
    <Application.Resources>      
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Controls/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <c:DiseaseToIconConverter x:Key="DiseaseToIconConverter"/>
            <c:DiseaseToFontConverter x:Key="DiseaseToFontConverter"/>

            <SolidColorBrush x:Key="Background" Color="#FF4D4D4E"/>
            <SolidColorBrush x:Key="StandardBorderBrush" Color="White"/>
            <SolidColorBrush x:Key="StandardMouseOverBrush" Color="Gray"/>
            <Thickness x:Key="StandardBorderThickness" Left="1" Top="1" Right="2" Bottom="2"/>
            <CornerRadius x:Key="StandardCornerRadius" BottomLeft="3" BottomRight="3" TopLeft="3" TopRight="3"/>

            <Style TargetType="Button" x:Key="StandardButtonStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="Common">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation From="Transparent" To="Gray" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Background).Color" Duration="0:00:00"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation From="Gray" To="Yellow" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Background).Color" Duration="0:00:00"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimation From="White" To="Gray" Storyboard.TargetName="Border" Storyboard.TargetProperty="(TextElement.Foreground).Color" Duration="0:00:00"/>
                                                <ColorAnimation From="White" To="Gray" Storyboard.TargetName="Border" Storyboard.TargetProperty="(BorderBrush).Color" Duration="0:00:00"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Border x:Name="Border" Opacity="1" Background="Transparent" BorderBrush="White" BorderThickness="2" TextElement.Foreground="White" TextElement.FontSize="14">
                                    <ContentPresenter HorizontalAlignment="Center"/>
                                </Border>

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="ActionButtonTemplate" TargetType="Button">
                <Grid>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="Common">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ColorAnimation From="Transparent" To="LightGray" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Background).Color" Duration="0:00:00"/>
                                    <ColorAnimation From="White" To="Black" Storyboard.TargetName="Border" Storyboard.TargetProperty="(TextElement.Foreground).Color" Duration="0:00:00"/>
                                    <ColorAnimation From="White" To="Black" Storyboard.TargetName="Border" Storyboard.TargetProperty="(BorderBrush).Color" Duration="0:00:00"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <ColorAnimation From="LightGray" To="Yellow" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Background).Color" Duration="0:00:00"/>
                                    <ColorAnimation From="White" To="Black" Storyboard.TargetName="Border" Storyboard.TargetProperty="(TextElement.Foreground).Color" Duration="0:00:00"/>
                                    <ColorAnimation From="White" To="Black" Storyboard.TargetName="Border" Storyboard.TargetProperty="(BorderBrush).Color" Duration="0:00:00"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <ColorAnimation From="White" To="Gray" Storyboard.TargetName="Border" Storyboard.TargetProperty="(TextElement.Foreground).Color" Duration="0:00:00"/>
                                    <ColorAnimation From="White" To="Gray" Storyboard.TargetName="Border" Storyboard.TargetProperty="(BorderBrush).Color" Duration="0:00:00"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>

                    <Border x:Name="Border" Opacity="1" Background="Transparent" BorderBrush="White" BorderThickness="2" TextElement.Foreground="White" TextElement.FontSize="14">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>

                </Grid>
            </ControlTemplate>

            <Style x:Key="TabItemListStyle" TargetType="ListBoxItem">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0,1,0,1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="Border" Background="Transparent" CornerRadius="2">
                                <ContentPresenter x:Name="Content" Margin="2" TextElement.Foreground="White" TextElement.FontSize="14"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource StandardMouseOverBrush}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="White"/>
                                    <Setter TargetName="Content" Property="TextElement.Foreground" Value="Black"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate DataType="{x:Type e:CityCard}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="Text" Text="{Binding}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Viewbox Grid.Column="1" Margin="5" Height="{Binding ElementName=Text, Path=ActualHeight}" VerticalAlignment="Center">
                        <ContentControl Content="{Binding Node.Disease, Converter={StaticResource DiseaseToIconConverter}}"/>
                    </Viewbox>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type e:BaseActionCard}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding Name}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type i:GameStatusViewModel}">
                <v:GameStatusView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type i:PlayersViewModel}">
                <v:PlayersView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type i:ActionsViewModel}">
                <v:ActionsView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type i:DrawViewModel}">
                <v:DrawView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type i:InfectionViewModel}">
                <v:InfectionView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type i:HandViewModel}">
                <v:HandView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type i:MessageViewModel}">
                <v:MessageView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type i:BoardViewModel}">
                <v:BoardView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type i:GovernmentGrantViewModel}">
                <v:GovernmentGrantView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type i:AirliftViewModel}">
                <v:AirliftView/>
            </DataTemplate>
            
            <Style TargetType="ScrollBar">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
    
</Application>
